services:
  app:
    depends_on:
      - postgres
    container_name: e_commerce_app
    restart: unless-stopped
    command: npm run start:dev
    env_file: ./.env
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - '4000:4000'
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
    networks:
      - e_commerce_app

  postgres:
    container_name: e_commerce_app_postgres
    image: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DATABASE
    networks:
      - e_commerce_app
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  postgres_migrations:
    container_name: e_commerce_app_postgres_migrations
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: npm run migrations:run
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    networks:
      - e_commerce_app

networks:
  e_commerce_app:
    driver: bridge
